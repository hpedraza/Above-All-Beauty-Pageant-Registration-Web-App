@model Above_All_Beauty_Pageant.ViewModels.ParticipantIndexViewModel
@{
    ViewBag.Title = "Welcome to Above All Beauty Pageant " + User.Identity.Name;
}
<!-- Need to create 1) Event details view 2) participant details view -->
<h2>Welcome @User.Identity.Name</h2>


@if (Model.Participants.Count() > 0)
{
    <table id ="ParticipantsTable" class="table table-striped table-hover table-responsive table-condensed">
        <thead>
            <tr>
                <td>First Name</td>
                <td>Last Name</td>
                <td>Age Group</td>
                <td>Gender</td>
                <td>Event</td>
                <td>Registered</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var participant in Model.Participants)
            {
                <tr>
                    <td>
                        @participant.FirstName
                    </td>
                    <td>
                        @participant.LastName
                    </td>
                    <td>
                        @participant.AgeGroupDataAnnotation
                    </td>
                    <td>
                        @participant.Gender
                    </td>
                    <td>
                        @participant.EventName               
                    </td>
                    <td>
                        @if (participant.Paid == false)
                        {
                            using (Html.BeginForm("Payment", "User", FormMethod.Get))
                            {
                                <input type="hidden" value="@participant.Id" name="id">
                                <input type="submit"  class="btn btn-success" id="render-payment-form" value="Register" />
                                <input type="button" id="js-remove-participant" data-participant="@participant.Id" class="btn btn-danger" value="Remove" />
                            }

                        }
                        else
                        {
                            using (Html.BeginForm("CategoryDetails", "Event", FormMethod.Post))
                            {
                                @Html.Hidden("AgeGroup", Convert.ToString(participant.AgeGroup))
                                @Html.Hidden("EventName", Convert.ToString(participant.EventName));
                                @Html.Hidden("Id" , Convert.ToString(participant.Id))
                                <input type="submit" class="btn btn-primary" data-event="@participant.EventName" value="Event Details" />
                            }

                        }


                    </td>
                </tr>
            }
        </tbody>
    </table>
}



<div id="add-participation-container">
    <div id="upcoming" style="z-index: 0;">
        <img id="spooky-img" src="~/Images/Website Imgs/Bat-Moon.png" />
        <h1 align="center" class="upcoming-header">Join our <span class="highlight-orange">Halloween Spooktacular Pageant</span></h1>
        <h3 align="center" class="upcoming-location-header">at the McAllen Convention Center on October 29, 2016</h3>
        <hr />
        <p align="center" class="upcoming-information-headers">Age Categories</p>

        <div id="age-categories">
            <div id="girls">
                <h3>Girls</h3>
                <p>Baby Miss: 01-11 months</p>
                <p>Pee Wee Miss: 12-23 months</p>
                <p>Tiny Miss: 2-3 years</p>
                <p>Little Miss: 4-5 years</p>
                <p>Petite Miss: 6-8 years</p>
                <p>Youth Miss: 9-12 years</p>
                <p>Teen Miss: 13-15 years</p>
            </div>

            <div id="Boys">
                <h3>Boys</h3>
                <p>Baby Mr: 01-11 months</p>
                <p>Pee Wee Mr: 12-23 months</p>
                <p>Tiny Mr: 2-3 years</p>
                <p>Little Mr: 4-5 years</p>
            </div>
        </div>

        <div id="pricing">
            <p align="center" class="upcoming-information-headers">Entry Fee</p>
            <h4 id="halloween-beauty-pageant">Halloween/Beauty Pageant: $90</h4>
            <div id="competition-list">
                <ul>
                    <li>Best Attire/Costume</li>
                    <li>Best Smile</li>
                    <li>Best Personality</li>
                    <li>Prettiest/Best Eyes</li>
                    <li>Model look</li>
                    <li>Photogenic</li>
                </ul>
            </div>
            <p id="extra-photo-p" class="pricing-p">Extra Photo x $5.00 each</p>
            <h4 align="center" class="pricing-p">All contestants must sell at least 10 raffle tickets to qualify for the Royal Division.</h4>
        </div>

    </div>
    @using (Html.BeginForm("AddParticipant", "User", FormMethod.Post, new { id = "add-participant-form" }))
    {

        @Html.AntiForgeryToken()

        <div class="form-group">
            <h3>Add Participant</h3>
            @Html.LabelFor(m => m.AddParticipant.FirstName)
            @Html.TextBoxFor(m => m.AddParticipant.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AddParticipant.FirstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AddParticipant.LastName)
            @Html.TextBoxFor(m => m.AddParticipant.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AddParticipant.LastName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AddParticipant.EventName)

            @Html.DropDownListFor(m => m.AddParticipant.EventName,
                                    new SelectList(Model.EventNames),
                                    "-- Event to Attend --",
                                    new { id = "event-drop-down-list", @class = "form-control" })


            @Html.ValidationMessageFor(m => m.AddParticipant.EventName)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.AddParticipant.Gender) <br />
            @Html.RadioButtonFor(m => m.AddParticipant.Gender, "Male")Male <br />
            @Html.RadioButtonFor(m => m.AddParticipant.Gender, "Female")Female
            @Html.ValidationMessageFor(m => m.AddParticipant.Gender)
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.AddParticipant.AgeGroup)
            @*Left off here going to create empty dropdown or generate and compare*@
            @Html.DropDownListFor(
                  a => a.AddParticipant.AgeGroup, new SelectList(new List<object> { }, new { id="age-group-dropdown",@class="form-control" })
        )

            @Html.ValidationMessageFor(m => m.AddParticipant.AgeGroup)
        </div>


        <input type="submit" class="btn btn-success" id="js-add-participant-button" value="Add Participant" disabled />
    }


</div>
<!-- Modal -->
<div id="remove-participant" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Remove Participant?</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to remove participant?</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="remove-participant-button" class="btn btn-danger" data-dismiss="modal">Remove</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>



